// <auto-generated />
using System;
using BookKeeperBot.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookKeeperBot.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210430105016_AddCommands")]
    partial class AddCommands
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("BookKeeperBot.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BookshelfId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BookshelfId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BookKeeperBot.Models.Bookshelf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Bookshelves");
                });

            modelBuilder.Entity("BookKeeperBot.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PreviousCommand")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SelectedBookId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SelectedBookshelfId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SelectedBookId");

                    b.HasIndex("SelectedBookshelfId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BookKeeperBot.Models.Book", b =>
                {
                    b.HasOne("BookKeeperBot.Models.Bookshelf", null)
                        .WithMany("Books")
                        .HasForeignKey("BookshelfId");
                });

            modelBuilder.Entity("BookKeeperBot.Models.Bookshelf", b =>
                {
                    b.HasOne("BookKeeperBot.Models.User", null)
                        .WithMany("Bookshelves")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("BookKeeperBot.Models.User", b =>
                {
                    b.HasOne("BookKeeperBot.Models.Book", "SelectedBook")
                        .WithMany()
                        .HasForeignKey("SelectedBookId");

                    b.HasOne("BookKeeperBot.Models.Bookshelf", "SelectedBookshelf")
                        .WithMany()
                        .HasForeignKey("SelectedBookshelfId");

                    b.Navigation("SelectedBook");

                    b.Navigation("SelectedBookshelf");
                });

            modelBuilder.Entity("BookKeeperBot.Models.Bookshelf", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("BookKeeperBot.Models.User", b =>
                {
                    b.Navigation("Bookshelves");
                });
#pragma warning restore 612, 618
        }
    }
}
